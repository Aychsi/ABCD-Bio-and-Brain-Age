---
title: "KDM_BBB_5.0_V1_Organs"
format:
  html: 
    theme: cosmo
    fontsize: 1.1em
    linestretch: 1.7
toc: true
editor: visual
params:
  df: df
  df_name: df_name
---

This file is the template for the first iteration of KDM analyses by training on baseline for Organ-Based Biomarkers. Reads in standardized Biomarkers by organ.

Input: + df (specific type of organ biomarkers)

Output: + kdm_train_bbb_sub.rds (Trained model) + (Projected KDM values for baseline)

1.  Read in data and split into healthy and unhealthy
2.  Split into time points
3.  Split healthy into training and test
4.  Train healthy
5.  Test healthy
6.  Project to unhealthy group
7.  T-Test
8.  Write csv file

# Libraries

```{r}
#install.packages("flexsurv")
#devtools::install_github("dayoonkwon/BioAge")
#| warning: false

root <- "/Users/hansoochang/Drexel/ABCD/"

library(BioAge)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(Metrics)
library(stats)
library(skimr)
library(pcaPP)
library(stringr)
library(stats)
library(misty)
library(emmeans)

```

# Change Data Frame Format
```{r}
#| warning: false
df <- jsonlite::fromJSON(params$df)
df_name <- params$df_name


# df <- of %>% select(-biospec_blood_imm_gran_abs)
```

# Split Baseline into healthy and unhealthy

```{r}

bbb_healthy_2year <- df %>% 
  filter(eventname == "2_year_follow_up_y_arm_1") %>% 
  filter(phys_ment_health == 0)

bbb_unhealthy_2year <- df %>% 
  filter(eventname == "2_year_follow_up_y_arm_1") %>% 
  filter(phys_ment_health != 0)

nrow(bbb_healthy_2year) 
nrow(bbb_unhealthy_2year) 
```

# Split Healthy Group for baseline

```{r}
set.seed(18)

### Healthy Training ###
samp <- sample(c(TRUE, FALSE), nrow(bbb_healthy_2year), replace=TRUE, prob=c(0.6,0.4))
bbb_train <- bbb_healthy_2year[samp, ]
bbb_test <- bbb_healthy_2year[!samp, ]

nrow(bbb_train) # 221
nrow(bbb_test) # 227
```

# Train Healthy
```{r}
bbb_markers_sub <- colnames(bbb_train %>% select(-c(subjectkey:age)))

# bbb_markers_sub
kdm_train_bbb_sub <- kdm_calc(bbb_train, biomarkers = bbb_markers_sub)

saveRDS(kdm_train_bbb_sub, paste0(root, "Version5.0_Exported_Data/", df_name, ".rds"))

```

# Correlation tests between kdm_age and chronological age
```{r}
nrow(kdm_train_bbb_sub$data)
hist(kdm_train_bbb_sub$data$age)
cor.test(as.numeric(kdm_train_bbb_sub$data$kdm), as.numeric(kdm_train_bbb_sub$data$age))
Metrics::rmse(as.numeric(kdm_train_bbb_sub$data$kdm), as.numeric(kdm_train_bbb_sub$data$age))
Metrics::mae(as.numeric(kdm_train_bbb_sub$data$kdm), as.numeric(kdm_train_bbb_sub$data$age))

```


# Project to test
## Get Prediction
```{r}
kdm_test_bbb_sub_test <- kdm_calc(bbb_test, biomarkers = bbb_markers_sub, fit = kdm_train_bbb_sub$fit, s_ba2 = 
                       kdm_train_bbb_sub$fit$s_ba2)

kdm_data_bbb_sub_test <- kdm_test_bbb_sub_test$data

```


## Correlation tests between kdm_age (both genders) and chronological age
```{r}
nrow(kdm_data_bbb_sub_test)
cor.test(as.numeric(kdm_data_bbb_sub_test$kdm), as.numeric(kdm_data_bbb_sub_test$age))
Metrics::rmse(as.numeric(kdm_data_bbb_sub_test$kdm), as.numeric(kdm_data_bbb_sub_test$age))
Metrics::mae(as.numeric(kdm_data_bbb_sub_test$kdm), as.numeric(kdm_data_bbb_sub_test$age))

kdm_data_bbb_sub_test$gender <- as.factor(kdm_data_bbb_sub_test$sex)
#plot age vs bioage
plot_ba(kdm_data_bbb_sub_test, "kdm", "KDM\nBiological Age")

```

# Project trained model onto Unhealthy cohort
## Get prediction
```{r}
kdm_unhealthy_bbb <- kdm_calc(bbb_unhealthy_2year, biomarkers = bbb_markers_sub, 
                              fit = kdm_train_bbb_sub$fit, s_ba2 = kdm_train_bbb_sub$fit$s_ba2)

kdm_data_unhealthy_bbb <- kdm_unhealthy_bbb$data


```

## Correlation tests between kdm_age (both genders) and chronological age (Unhealthy)
```{r}
nrow(kdm_data_unhealthy_bbb)
cor.test(as.numeric(kdm_data_unhealthy_bbb$kdm), as.numeric(kdm_data_unhealthy_bbb$age))
Metrics::rmse(as.numeric(kdm_data_unhealthy_bbb$kdm), as.numeric(kdm_data_unhealthy_bbb$age))
Metrics::mae(as.numeric(kdm_data_unhealthy_bbb$kdm), as.numeric(kdm_data_unhealthy_bbb$age))

kdm_data_unhealthy_bbb$gender <- as.factor(kdm_data_unhealthy_bbb$sex)
#plot age vs bioage
plot_ba(kdm_data_unhealthy_bbb, "kdm", "KDM\nBiological Age")

```

# Export Data
```{r}
# Merge Test and Unhealhty cohort
kdm_data_bbb_sub <- rbind(kdm_data_bbb_sub_test, kdm_data_unhealthy_bbb)
table(kdm_data_bbb_sub$phys_ment_health)
write.csv(kdm_data_bbb_sub, paste0(root, "Version5.0_Exported_Data/", df_name, "_kdm",".csv"))

```

# Plot kdm_advance
```{r}
#plot age vs bioage
plot_ba(kdm_data_bbb_sub, "kdm_advance", "KDM\nBiological Age")
ggdensity(kdm_data_bbb_sub$kdm_advance)

hist(kdm_data_bbb_sub$kdm)
hist(kdm_data_bbb_sub$kdm_advance)

```
